name: Code Analysis with SonarQube

permissions:
  checks: write
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
      types: [opened, synchronize, reopened]

jobs:
  analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[test]

      - name: Run Build Wrapper
        run: |
          mkdir -p ./src/dedi_link/data/bin/
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} \
            gcc -shared -fPIC \
            -o ./src/dedi_link/data/bin/libpow.ci.so \
            ./src/dedi_link/etc/libpow/pow_solver.c \
            -lcrypto

      - name: Run tests with coverage
        continue-on-error: true
        run: |
          export PYTHONPATH=./src:$PYTHONPATH
          pytest --junitxml=test-results.xml --cov=dedi_link --cov-report=xml --cov-report=html

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Extract Version
        run: |
          VERSION=$(awk -F"'" '/^__version__/ {print $2}' ./src/dedi_link/__init__.py)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectVersion=${{ env.VERSION }}
            -Dsonar.cfamily.compile-commands=${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json

      - name: Publish test results
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          report_paths: "test-results.xml"
